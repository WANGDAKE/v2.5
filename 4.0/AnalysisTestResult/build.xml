<?xml version="1.0" encoding="UTF-8"?>
<project name="AnalysisTestResult" default="run" basedir=".">
<property name="classdir" value="build/classes"/>
<property name="src" value="src"/>
<property name="lib" value="libs"/>
<property name="build" value="build"/>
<property name="jar" value="jar"/>
<property name="classpath" value="${build}"/>
<property name="jarname" value="Dev.jar"/>
<property name="runclass" value="com.xls.test.FileViewer"/> 
<property name="version" value="1.0"/>

<echo message="将测试结果转换为xml文件!!!"/>

<path id="lib">         
  <fileset dir="./libs">  
      <include name="*.jar"/>  
  </fileset>      
</path>
<path id="classpath"> 
           <pathelement path="${classpath}"/> 
           <fileset dir="${lib}"> 
                  <include name="*.jar"/> 
           </fileset> 
</path> 
<target name="clean">
	<!-- Delete the ${build} and ${jar} directory trees -->
	<delete dir="${build}"/>
	<delete dir="${jar}"/>
</target>
<target name="init" depends = "clean">
	<!-- Delete the ${build} and ${jar} directory trees -->
	<mkdir dir="${build}"/>
	<mkdir dir="${jar}"/>
</target>
<target name="compile" depends="init">
    
	<!-- copy all .java files from ${src} to ${build} -->
	<copy todir="${build}/">
		<fileset dir="${src}" includes="**/*.java"/>
		<!-- apply a substitution @version@ with the value of ${version} -->
		<filterset>
		<filter token="version" value="${version}"/>
		</filterset>
	</copy>
	<!-- run javac to compile the source files -->
	<javac srcdir="${build}" destdir="${build}" includeantruntime = "false">
		<classpath>
		<!-- use the value of the ${classpath} property in the classpath -->
		<pathelement path="${classpath}"/>
		<!-- include all jar files -->
		<fileset dir="${lib}">
		<include name="**/*.jar"/>
		</fileset>
		</classpath>
	</javac>

</target>

<target name="jar" depends="compile">
<!-- make a jar file -->
<jar jarfile="${jar}/${jarname}" basedir="${build}/"/>
</target>
<target name="run" depends="jar">
	<java classname="${runclass}">
	   <!--  <classpath path="${classdir}"/> -->
		<classpath> 
        	<path refid="classpath"/> 
        </classpath>
	</java>
</target>

</project>